1) まず原因の見当を付ける（BOM を確認）

PowerShell でファイル先頭のバイト（BOM）を確認します。

# ファイル先頭 4 バイトを 16 進で表示
Get-Content .\script.ps1 -Encoding Byte -ReadCount 0 | Select-Object -First 1 | ForEach-Object { $_[0..3] -join ' ' }


出力（先頭バイト）が次のいずれかならエンコーディングの目安になります：

EF BB BF → UTF-8 BOM（UTF-8 に BOM付き）

FF FE → UTF-16 LE（Windows の "Unicode"）

何も無い／別の値 → ANSI（例：Shift_JIS）や UTF-8 (BOMなし) など

2) 対症療法（確実で簡単）：UTF-8（BOM付き）か UTF-16LE に変換して保存する

Windows PowerShell 5.1 を使っているなら「UTF-8 BOM 付き」か「UTF-16 LE（Windows の ‘Unicode’）」にすると安定します。手軽な変換コマンド例：

# 1) 元ファイルを読み、UTF-8（BOM付き）で新しいファイルに保存
Get-Content .\script.ps1 -Raw | Out-File .\script-utf8bom.ps1 -Encoding UTF8

# 2) あるいは UTF-16 LE (PowerShell の "Unicode") にする
Get-Content .\script.ps1 -Raw | Out-File .\script-unicode.ps1 -Encoding Unicode


変換後、script-utf8bom.ps1 か script-unicode.ps1 を実行してみてください。

3) エディタで保存する（GUI が楽）

VS Code：File → Save with Encoding → UTF-8 with BOM（または UTF-16 LE）を選択。

メモ帳（Windows 10/11）：名前を付けて保存 → エンコーディング欄で UTF-8（※古いメモ帳は BOM を付ける）または Unicode を選ぶ。

Notepad++：Encoding メニュー → Encode in UTF-8-BOM または Encode in UCS-2 LE (UTF-16 LE)。

4) 実行時のコンソール表示が文字化けする場合

スクリプトは正しくてもコンソールの表示（出力）が文字化けすることがあります。コンソール側を UTF-8 に合わせるには：

# コンソールのコードページを UTF-8 に
chcp 65001

# PowerShell 側の出力エンコーディングを UTF-8 に
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8


（PowerShell 7 では既に UTF-8 前提のことが多いです）

5) PowerShell のバージョン別の注意

Windows PowerShell 5.1（旧来）：UTF-16（LE）や UTF-8 BOM にすると確実。UTF-8（BOMなし）は誤解されることがある。

PowerShell 7（Core）：UTF-8（BOM無しでも可）を前提にしているため、UTF-8 で問題ないことが多い。

6) 簡単チェック手順（まとめ）

元ファイルの BOM を確認（手順1）。

UTF-8 BOM 付きで保存して実行してみる（手順2）。

実行結果の出力が文字化けするなら chcp 65001 と [Console]::OutputEncoding = [System.Text.Encoding]::UTF8 を実行してもう一度。

問題が続く場合は PowerShell のバージョン（$PSVersionTable.PSVersion）も教えてください（そのまま教えてもらえば最適な対策を提案します）。
